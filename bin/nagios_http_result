#!/usr/bin/perl
#
# Helper script to capture the output of a cron job to file.
#

use strict;
use File::Basename;
use Getopt::Long;
use Sys::Hostname;
use YAML qw(Dump DumpFile);
use LWP::UserAgent;
use HTTP::Request;

sub usage { die "usage: " . basename($0) . " [-v] [-u <url>] [-U <user>] -h <hash> -n <name>\n"; }

my ($help, $hash, $name, $output, $stdout, $url, $user, $verbose);
usage
unless GetOptions(
  'help|?'          => \$help,
  'hash|h=s'        => \$hash,
  'name|n=s'        => \$name,
  'output|o=s'      => \$output,
  'stdout'          => \$stdout,
  'url|u=s'         => \$url,
  'user|U=s'        => \$user,
  'verbose|v+'      => \$verbose,
);
usage if $help;
usage unless $hash && $name;
warn "--user argument is ignored with --url\n" if $url && $user;

unless ($output) {
  local $/ = undef;
  $output = <>;
}
die "No output found\n" unless $output;

# Generate output
my $output = {
  hash => $hash,
  mtime => time,
  output => $output,
};

# Display / submit / save output
if ($stdout) {
  print Dump $output;
}

elsif ($url) {
  my $hostname = hostname;
  $hostname =~ s/\..*//;

  $url .= '/' unless substr($url,-1) eq '/';
  $url .= "$hostname/$name";

  my $ua = LWP::UserAgent->new;
  my $req = HTTP::Request->new( PUT => $url );
  $req->content_type('text/x-yaml');
  $req->content(Dump $output);

  my $res = $ua->request($req);
  die "PUT to url '$url' failed: " . $res->status_line unless $res->success;
}

else {
  my $outfile = "/var/www/nagios-http/$name";
  DumpFile($outfile, $output);

  # If $user is set and we're running as root, chown the $outfile
  if ($user && $> == 0) {
    my ($uid,$gid) = (getpwnam($user))[2,3];
    chown $uid, $gid, $outfile;
  }
}

